name: CI

on:
  push:
    branches:
      - master
      - 0.4.x
  pull_request:

jobs:
  tests:
    name: "Tests"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php: ['7.4', '8.0', '8.1']

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "json, dom, mbstring"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php }}-composer-cache-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php }}-composer-cache"

      - name: "Install dependencies"
        run: "composer update --no-suggest --no-interaction --prefer-dist --no-progress"

      - name: "Run tests"
        run: "php -d error_reporting=-1 bin/phpunit --colors=always -c phpunit.xml"

  static-analysis:
    name: "PHPStan"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php: ['7.4', '8.0', '8.1']

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "json, dom, mbstring"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php }}-composer-cache-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php }}-composer-cache"

      - name: "Install dependencies"
        run: "composer update --no-suggest --no-interaction --prefer-dist --no-progress"

      - name: "PHPStan"
        run: "php -d error_reporting=-1 -d memory_limit=-1 bin/phpstan --ansi analyse"

  coding-standards:
    name: "Coding Standard"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php: ['8.0']

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "json, dom, mbstring"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Cache dependencies"
        uses: "actions/cache@v1.1.2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php }}-composer-cache-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php }}-composer-cache"

      - name: "Install dependencies"
        run: "composer update --no-suggest --no-interaction --prefer-dist --no-progress"

      - name: "Normalize composer"
        run: "composer normalize"

      - name: "Check code styles"
        run: "php bin/phpcs --standard=./ruleset.xml --extensions=php --tab-width=4 -sp ./src ./tests"
